openapi: 3.1.0
info:
  description: This is an API reference server that mimics openai server.
  title: OpenAI API Reference Server
  version: 0.1.0
servers:
- url: /
paths:
  /openai/deployments/{deployment_name}/chat/completions:
    post:
      operationId: create_chat_completion_openai_deployments__deployment_name__chat_completions_post
      parameters:
      - explode: false
        in: path
        name: deployment_name
        required: true
        schema:
          title: Deployment Name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Create Chat Completion
  /openai/deployments/{deployment_name}/embeddings:
    post:
      operationId: create_embedding_openai_deployments__deployment_name__embeddings_post
      parameters:
      - explode: false
        in: path
        name: deployment_name
        required: true
        schema:
          title: Deployment Name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Create Embedding
  /openai/deployments/{deployment_name}/completions:
    post:
      operationId: create_completion_openai_deployments__deployment_name__completions_post
      parameters:
      - explode: false
        in: path
        name: deployment_name
        required: true
        schema:
          title: Deployment Name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Create Completion
components:
  schemas:
    BaseModel:
      properties: {}
      title: BaseModel
      type: object
    ChatCompletionAssistantMessageParam:
      properties:
        role:
          enum:
          - assistant
          title: Role
          type: string
        content:
          nullable: true
          type: string
        function_call:
          $ref: '#/components/schemas/FunctionCall'
        name:
          title: Name
          type: string
        tool_calls:
          items:
            $ref: '#/components/schemas/ChatCompletionMessageToolCallParam'
          type: array
      required:
      - role
      title: ChatCompletionAssistantMessageParam
    ChatCompletionContentPartImageParam:
      properties:
        image_url:
          $ref: '#/components/schemas/ImageURL'
        type:
          enum:
          - image_url
          title: Type
          type: string
      required:
      - image_url
      - type
      title: ChatCompletionContentPartImageParam
    ChatCompletionContentPartTextParam:
      properties:
        text:
          title: Text
          type: string
        type:
          enum:
          - text
          title: Type
          type: string
      required:
      - text
      - type
      title: ChatCompletionContentPartTextParam
    ChatCompletionFunctionMessageParam:
      properties:
        content:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        role:
          enum:
          - function
          title: Role
          type: string
      required:
      - content
      - name
      - role
      title: ChatCompletionFunctionMessageParam
    ChatCompletionMessageToolCallParam:
      properties:
        id:
          title: Id
          type: string
        function:
          $ref: '#/components/schemas/Function'
        type:
          enum:
          - function
          title: Type
          type: string
      required:
      - function
      - id
      - type
      title: ChatCompletionMessageToolCallParam
    ChatCompletionNamedFunction:
      additionalProperties: false
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: ChatCompletionNamedFunction
    ChatCompletionNamedToolChoiceParam:
      additionalProperties: false
      properties:
        function:
          $ref: '#/components/schemas/ChatCompletionNamedFunction'
        type:
          default: function
          enum:
          - function
          title: Type
          type: string
      required:
      - function
      title: ChatCompletionNamedToolChoiceParam
    ChatCompletionRequest:
      additionalProperties: {}
      example:
        top_logprobs: 1
        chat_template_kwargs: "{}"
        guided_regex: Guided_Regex
        logit_bias:
          key: 6.027456183070403
        seed: 7
        use_beam_search: false
        skip_special_tokens: true
        documents:
        - key: Documents
        - key: Documents
        presence_penalty: 2.3021358869347655
        echo: false
        early_stopping: false
        tools:
        - function:
            name: name
            description: description
            parameters: "{}"
          type: function
        - function:
            name: name
            description: description
            parameters: "{}"
          type: function
        logprobs: true
        top_p: 3.616076749251911
        frequency_penalty: 0.8008281904610115
        response_format:
          type: text
        best_of: 2
        truncate_prompt_tokens: 1
        stream: true
        top_k: 4
        temperature: 9.301444243932576
        tool_choice: none
        guided_grammar: Guided_Grammar
        model: Model
        ignore_eos: false
        guided_json: Guided_Json
        chat_template: Chat_Template
        max_tokens: 5
        guided_whitespace_pattern: Guided_Whitespace_Pattern
        add_generation_prompt: true
        "n": 5
        min_tokens: 6
        guided_choice:
        - Guided_Choice
        - Guided_Choice
        min_p: 7.386281948385884
        spaces_between_special_tokens: true
        stop: Stop
        include_stop_str_in_output: false
        messages:
        - role: system
          name: name
          content: content
        - role: system
          name: name
          content: content
        guided_decoding_backend: Guided_Decoding_Backend
        stream_options:
          continuous_usage_stats: true
          include_usage: true
        user: User
        repetition_penalty: 1.2315135367772556
        length_penalty: 1.0246457001441578
        stop_token_ids:
        - 1
        - 1
        add_special_tokens: false
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Messages_inner'
          title: Messages
        model:
          $ref: '#/components/schemas/Model'
        frequency_penalty:
          $ref: '#/components/schemas/Frequency_Penalty'
        logit_bias:
          $ref: '#/components/schemas/Logit_Bias'
        logprobs:
          $ref: '#/components/schemas/Logprobs'
        top_logprobs:
          $ref: '#/components/schemas/Top_Logprobs'
        max_tokens:
          $ref: '#/components/schemas/Max_Tokens'
        "n":
          $ref: '#/components/schemas/N'
        presence_penalty:
          $ref: '#/components/schemas/Presence_Penalty'
        response_format:
          $ref: '#/components/schemas/ChatCompletionRequest_response_format'
        seed:
          $ref: '#/components/schemas/Seed'
        stop:
          $ref: '#/components/schemas/Stop'
        stream:
          $ref: '#/components/schemas/Stream'
        stream_options:
          $ref: '#/components/schemas/ChatCompletionRequest_stream_options'
        temperature:
          $ref: '#/components/schemas/Temperature'
        top_p:
          $ref: '#/components/schemas/Top_P'
        tools:
          $ref: '#/components/schemas/Tools'
        tool_choice:
          $ref: '#/components/schemas/Tool_Choice'
        user:
          $ref: '#/components/schemas/User'
        best_of:
          $ref: '#/components/schemas/Best_Of'
        use_beam_search:
          default: false
          title: Use Beam Search
        top_k:
          default: -1
          title: Top K
        min_p:
          default: 0.0
          title: Min P
        repetition_penalty:
          default: 1.0
          title: Repetition Penalty
        length_penalty:
          default: 1.0
          title: Length Penalty
        early_stopping:
          default: false
          title: Early Stopping
        stop_token_ids:
          $ref: '#/components/schemas/Stop_Token_Ids'
        include_stop_str_in_output:
          default: false
          title: Include Stop Str In Output
        ignore_eos:
          default: false
          title: Ignore Eos
        min_tokens:
          default: 0
          title: Min Tokens
        skip_special_tokens:
          default: true
          title: Skip Special Tokens
        spaces_between_special_tokens:
          default: true
          title: Spaces Between Special Tokens
        truncate_prompt_tokens:
          $ref: '#/components/schemas/Truncate_Prompt_Tokens'
        echo:
          default: false
          description: "If true, the new message will be prepended with the last message\
            \ if they belong to the same role."
          title: Echo
        add_generation_prompt:
          default: true
          description: "If true, the generation prompt will be added to the chat template.\
            \ This is a parameter used by chat template in tokenizer config of the\
            \ model."
          title: Add Generation Prompt
        add_special_tokens:
          default: false
          description: "If true, special tokens (e.g. BOS) will be added to the prompt\
            \ on top of what is added by the chat template. For most models, the chat\
            \ template takes care of adding the special tokens so this should be set\
            \ to false (as is the default)."
          title: Add Special Tokens
        documents:
          $ref: '#/components/schemas/Documents'
        chat_template:
          $ref: '#/components/schemas/Chat_Template'
        chat_template_kwargs:
          $ref: '#/components/schemas/Chat_Template_Kwargs'
        guided_json:
          $ref: '#/components/schemas/Guided_Json'
        guided_regex:
          $ref: '#/components/schemas/Guided_Regex'
        guided_choice:
          $ref: '#/components/schemas/Guided_Choice'
        guided_grammar:
          $ref: '#/components/schemas/Guided_Grammar'
        guided_decoding_backend:
          $ref: '#/components/schemas/Guided_Decoding_Backend'
        guided_whitespace_pattern:
          $ref: '#/components/schemas/Guided_Whitespace_Pattern'
      required:
      - messages
      title: ChatCompletionRequest
    ChatCompletionSystemMessageParam:
      example:
        role: system
        name: name
        content: content
      properties:
        content:
          title: Content
          type: string
        role:
          enum:
          - system
          title: Role
          type: string
        name:
          title: Name
          type: string
      required:
      - content
      - role
      title: ChatCompletionSystemMessageParam
    ChatCompletionToolMessageParam:
      properties:
        content:
          title: Content
          type: string
        role:
          enum:
          - tool
          title: Role
          type: string
        tool_call_id:
          title: Tool Call Id
          type: string
      required:
      - content
      - role
      - tool_call_id
      title: ChatCompletionToolMessageParam
    ChatCompletionToolsParam:
      additionalProperties: false
      example:
        function:
          name: name
          description: description
          parameters: "{}"
        type: function
      properties:
        type:
          default: function
          enum:
          - function
          title: Type
          type: string
        function:
          $ref: '#/components/schemas/FunctionDefinition'
      required:
      - function
      title: ChatCompletionToolsParam
    ChatCompletionUserMessageParam:
      properties:
        content:
          $ref: '#/components/schemas/Content'
        role:
          enum:
          - user
          title: Role
          type: string
        name:
          title: Name
          type: string
      required:
      - content
      - role
      title: ChatCompletionUserMessageParam
    CompletionRequest:
      additionalProperties: {}
      example:
        guided_regex: Guided_Regex
        logit_bias:
          key: 5.962133916683182
        seed: 3
        use_beam_search: false
        skip_special_tokens: true
        presence_penalty: 9.301444243932576
        echo: true
        early_stopping: false
        suffix: Suffix
        logprobs: 5
        top_p: 4.145608029883936
        frequency_penalty: 1.4658129805029452
        response_format:
          type: text
        best_of: 6
        truncate_prompt_tokens: 1
        stream: true
        top_k: 7
        temperature: 2.027123023002322
        guided_grammar: Guided_Grammar
        model: Model
        ignore_eos: false
        guided_json: Guided_Json
        max_tokens: 2
        guided_whitespace_pattern: Guided_Whitespace_Pattern
        "n": 7
        min_tokens: 7
        guided_choice:
        - Guided_Choice
        - Guided_Choice
        allowed_token_ids:
        - 4
        - 4
        min_p: 1.2315135367772556
        spaces_between_special_tokens: true
        stop: Stop
        include_stop_str_in_output: false
        guided_decoding_backend: Guided_Decoding_Backend_1
        stream_options:
          continuous_usage_stats: true
          include_usage: true
        prompt:
        - 0
        - 0
        user: User
        repetition_penalty: 1.0246457001441578
        length_penalty: 1.4894159098541704
        stop_token_ids:
        - 6
        - 6
        add_special_tokens: true
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'
        model:
          $ref: '#/components/schemas/Model'
        best_of:
          $ref: '#/components/schemas/Best_Of'
        echo:
          $ref: '#/components/schemas/Echo'
        frequency_penalty:
          $ref: '#/components/schemas/Frequency_Penalty'
        logit_bias:
          $ref: '#/components/schemas/Logit_Bias'
        logprobs:
          $ref: '#/components/schemas/Logprobs_1'
        max_tokens:
          $ref: '#/components/schemas/Max_Tokens_1'
        "n":
          default: 1
          title: "N"
        presence_penalty:
          $ref: '#/components/schemas/Presence_Penalty'
        seed:
          $ref: '#/components/schemas/Seed'
        stop:
          $ref: '#/components/schemas/Stop'
        stream:
          $ref: '#/components/schemas/Stream'
        stream_options:
          $ref: '#/components/schemas/ChatCompletionRequest_stream_options'
        suffix:
          $ref: '#/components/schemas/Suffix'
        temperature:
          $ref: '#/components/schemas/Temperature_1'
        top_p:
          $ref: '#/components/schemas/Top_P'
        user:
          $ref: '#/components/schemas/User'
        use_beam_search:
          default: false
          title: Use Beam Search
        top_k:
          default: -1
          title: Top K
        min_p:
          default: 0.0
          title: Min P
        repetition_penalty:
          default: 1.0
          title: Repetition Penalty
        length_penalty:
          default: 1.0
          title: Length Penalty
        early_stopping:
          default: false
          title: Early Stopping
        stop_token_ids:
          $ref: '#/components/schemas/Stop_Token_Ids'
        include_stop_str_in_output:
          default: false
          title: Include Stop Str In Output
        ignore_eos:
          default: false
          title: Ignore Eos
        min_tokens:
          default: 0
          title: Min Tokens
        skip_special_tokens:
          default: true
          title: Skip Special Tokens
        spaces_between_special_tokens:
          default: true
          title: Spaces Between Special Tokens
        truncate_prompt_tokens:
          $ref: '#/components/schemas/Truncate_Prompt_Tokens'
        allowed_token_ids:
          $ref: '#/components/schemas/Allowed_Token_Ids'
        add_special_tokens:
          default: true
          description: "If true (the default), special tokens (e.g. BOS) will be added\
            \ to the prompt."
          title: Add Special Tokens
        response_format:
          $ref: '#/components/schemas/CompletionRequest_response_format'
        guided_json:
          $ref: '#/components/schemas/Guided_Json'
        guided_regex:
          $ref: '#/components/schemas/Guided_Regex'
        guided_choice:
          $ref: '#/components/schemas/Guided_Choice'
        guided_grammar:
          $ref: '#/components/schemas/Guided_Grammar'
        guided_decoding_backend:
          $ref: '#/components/schemas/Guided_Decoding_Backend_1'
        guided_whitespace_pattern:
          $ref: '#/components/schemas/Guided_Whitespace_Pattern'
      required:
      - prompt
      title: CompletionRequest
    EmbeddingRequest:
      additionalProperties: false
      example:
        input:
        - 0
        - 0
        encoding_format: encoding_format
        model: model
        user: user
        dimensions: 6
      properties:
        input:
          $ref: '#/components/schemas/Input'
        encoding_format:
          nullable: true
          pattern: ^(float|base64)$
          type: string
        model:
          nullable: true
          type: string
        dimensions:
          nullable: true
          type: integer
        user:
          nullable: true
          type: string
      required:
      - input
      title: EmbeddingRequest
    Function:
      properties:
        arguments:
          title: Arguments
          type: string
        name:
          title: Name
          type: string
      required:
      - arguments
      - name
      title: Function
    FunctionCall:
      properties:
        arguments:
          title: Arguments
          type: string
        name:
          title: Name
          type: string
      required:
      - arguments
      - name
      title: FunctionCall
    FunctionDefinition:
      additionalProperties: false
      example:
        name: name
        description: description
        parameters: "{}"
      properties:
        name:
          title: Name
          type: string
        description:
          nullable: true
          type: string
        parameters:
          nullable: true
          type: object
      required:
      - name
      title: FunctionDefinition
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    ImageURL:
      properties:
        url:
          title: Url
          type: string
        detail:
          enum:
          - auto
          - low
          - high
          title: Detail
          type: string
      required:
      - url
      title: ImageURL
    ResponseFormat:
      additionalProperties: false
      example:
        type: text
      properties:
        type:
          enum:
          - text
          - json_object
          title: Type
          type: string
      required:
      - type
      title: ResponseFormat
    StreamOptions:
      additionalProperties: false
      example:
        continuous_usage_stats: true
        include_usage: true
      properties:
        include_usage:
          nullable: true
          type: boolean
        continuous_usage_stats:
          nullable: true
          type: boolean
      title: StreamOptions
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    Messages_inner:
      anyOf:
      - $ref: '#/components/schemas/ChatCompletionSystemMessageParam'
      - $ref: '#/components/schemas/ChatCompletionUserMessageParam'
      - $ref: '#/components/schemas/ChatCompletionAssistantMessageParam'
      - $ref: '#/components/schemas/ChatCompletionToolMessageParam'
      - $ref: '#/components/schemas/ChatCompletionFunctionMessageParam'
    Model:
      anyOf:
      - {}
      - {}
      title: Model
    Frequency_Penalty:
      anyOf:
      - {}
      - {}
      default: 0.0
      title: Frequency Penalty
    Logit_Bias:
      anyOf:
      - additionalProperties: {}
      - {}
      title: Logit Bias
    Logprobs:
      anyOf:
      - {}
      - {}
      default: false
      title: Logprobs
    Top_Logprobs:
      anyOf:
      - {}
      - {}
      default: 0
      title: Top Logprobs
    Max_Tokens:
      anyOf:
      - {}
      - {}
      title: Max Tokens
    "N":
      anyOf:
      - {}
      - {}
      default: 1
      title: "N"
    Presence_Penalty:
      anyOf:
      - {}
      - {}
      default: 0.0
      title: Presence Penalty
    ChatCompletionRequest_response_format:
      anyOf:
      - $ref: '#/components/schemas/ResponseFormat'
      - {}
    Seed:
      anyOf:
      - {}
      - {}
      title: Seed
    Stop:
      anyOf:
      - {}
      - items: {}
      - {}
      title: Stop
    Stream:
      anyOf:
      - {}
      - {}
      default: false
      title: Stream
    ChatCompletionRequest_stream_options:
      anyOf:
      - $ref: '#/components/schemas/StreamOptions'
      - {}
    Temperature:
      anyOf:
      - {}
      - {}
      default: 0.7
      title: Temperature
    Top_P:
      anyOf:
      - {}
      - {}
      default: 1.0
      title: Top P
    Tools:
      anyOf:
      - items:
          $ref: '#/components/schemas/ChatCompletionToolsParam'
      - {}
      title: Tools
    Tool_Choice:
      anyOf:
      - enum:
        - none
      - $ref: '#/components/schemas/ChatCompletionNamedToolChoiceParam'
      - {}
      default: none
      title: Tool Choice
    User:
      anyOf:
      - {}
      - {}
      title: User
    Best_Of:
      anyOf:
      - {}
      - {}
      title: Best Of
    Stop_Token_Ids:
      anyOf:
      - items: {}
      - {}
      title: Stop Token Ids
    Truncate_Prompt_Tokens:
      anyOf:
      - minimum: 1.0
      - {}
      title: Truncate Prompt Tokens
    Documents:
      anyOf:
      - items:
          additionalProperties: {}
      - {}
      description: "A list of dicts representing documents that will be accessible\
        \ to the model if it is performing RAG (retrieval-augmented generation). If\
        \ the template does not support RAG, this argument will have no effect. We\
        \ recommend that each document should be a dict containing \"title\" and \"\
        text\" keys."
      title: Documents
    Chat_Template:
      anyOf:
      - {}
      - {}
      description: "A Jinja template to use for this conversion. If this is not passed,\
        \ the model's default chat template will be used instead."
      title: Chat Template
    Chat_Template_Kwargs:
      anyOf:
      - {}
      - {}
      description: Additional kwargs to pass to the template renderer. Will be accessible
        by the chat template.
      title: Chat Template Kwargs
    Guided_Json:
      anyOf:
      - {}
      - {}
      - $ref: '#/components/schemas/BaseModel'
      - {}
      description: "If specified, the output will follow the JSON schema."
      title: Guided Json
    Guided_Regex:
      anyOf:
      - {}
      - {}
      description: "If specified, the output will follow the regex pattern."
      title: Guided Regex
    Guided_Choice:
      anyOf:
      - items: {}
      - {}
      description: "If specified, the output will be exactly one of the choices."
      title: Guided Choice
    Guided_Grammar:
      anyOf:
      - {}
      - {}
      description: "If specified, the output will follow the context free grammar."
      title: Guided Grammar
    Guided_Decoding_Backend:
      anyOf:
      - {}
      - {}
      description: "If specified, will override the default guided decoding backend\
        \ of the server for this specific request. If set, must be either 'outlines'\
        \ / 'lm-format-enforcer'"
      title: Guided Decoding Backend
    Guided_Whitespace_Pattern:
      anyOf:
      - {}
      - {}
      description: "If specified, will override the default whitespace pattern for\
        \ guided json decoding."
      title: Guided Whitespace Pattern
    Content_anyOf_inner:
      anyOf:
      - $ref: '#/components/schemas/ChatCompletionContentPartTextParam'
      - $ref: '#/components/schemas/ChatCompletionContentPartImageParam'
    Content:
      anyOf:
      - type: string
      - items:
          $ref: '#/components/schemas/Content_anyOf_inner'
      title: Content
    Prompt:
      anyOf:
      - items: {}
      - items:
          items: {}
      - {}
      - items: {}
      title: Prompt
    Echo:
      anyOf:
      - {}
      - {}
      default: false
      title: Echo
    Logprobs_1:
      anyOf:
      - {}
      - {}
      title: Logprobs
    Max_Tokens_1:
      anyOf:
      - {}
      - {}
      default: 16
      title: Max Tokens
    Suffix:
      anyOf:
      - {}
      - {}
      title: Suffix
    Temperature_1:
      anyOf:
      - {}
      - {}
      default: 1.0
      title: Temperature
    Allowed_Token_Ids:
      anyOf:
      - items: {}
      - {}
      title: Allowed Token Ids
    CompletionRequest_response_format:
      anyOf:
      - $ref: '#/components/schemas/ResponseFormat'
      - {}
      description: "Similar to chat completion, this parameter specifies the format\
        \ of output. Only {'type': 'json_object'} or {'type': 'text' } is supported."
    Guided_Decoding_Backend_1:
      anyOf:
      - {}
      - {}
      description: "If specified, will override the default guided decoding backend\
        \ of the server for this specific request. If set, must be one of 'outlines'\
        \ / 'lm-format-enforcer'"
      title: Guided Decoding Backend
    Input:
      anyOf:
      - items:
          type: integer
      - items:
          items:
            type: integer
      - type: string
      - items:
          type: string
      title: Input
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    APIKeyHeader:
      in: header
      name: api-key
      type: apiKey
